/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Exporter, ExporterBuffer, RootSpan, SpanContext } from '@opencensus/core';
import { Logger } from '@opencensus/core';
import { StackdriverExporterOptions } from './types';
/** Format and sends span information to Stackdriver */
export declare class StackdriverTraceExporter implements Exporter {
    projectId: string;
    exporterBuffer: ExporterBuffer;
    logger: Logger;
    failBuffer: SpanContext[];
    constructor(options: StackdriverExporterOptions);
    /**
     * Is called whenever a span is ended.
     * @param root the ended span
     */
    onEndSpan(root: RootSpan): void;
    /** Not used for this exporter */
    onStartSpan(root: RootSpan): void;
    /**
     * Publishes a list of root spans to Stackdriver.
     * @param rootSpans
     */
    publish(rootSpans: RootSpan[]): Promise<any>;
    /**
     * Translates root span data to Stackdriver's trace format.
     * @param root
     */
    private translateTrace(root);
    /**
     * Translates span data to Stackdriver's span format.
     * @param span
     */
    private translateSpan(span);
    /**
     * Sends traces in the Stackdriver format to the service.
     * @param traces
     */
    private sendTrace(traces);
    /**
     * Gets the Google Application Credentials from the environment variables,
     * authenticates the client and calls a method to send the traces data.
     * @param stackdriverTraces
     */
    private authorize(stackdriverTraces);
}
